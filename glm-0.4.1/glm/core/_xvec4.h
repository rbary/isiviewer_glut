//////////////////////////////////////////////////////////////////////////////////
// OpenGL Mathematics Copyright (c) 2005 G-Truc Creation (www.g-truc.net)
//////////////////////////////////////////////////////////////////////////////////
// Author  : Christophe [Groove] Riccio (contact [at] g-truc [point] net)
// Created : 2006-04-27
// Updated : 2006-04-27
// Licence : This source is under GNU LGPL licence
// File    : _xvec4.h
//////////////////////////////////////////////////////////////////////////////////

#ifndef __xvec4_h__
#define __xvec4_h__

namespace glm
{
    template <typename T> class _xvec2;
    template <typename T> class _xvec3;
    class _bvec2;
    class _bvec3;
    class _bvec4;

    //!< \brief Template for Vector of 3 floating-point numbers or 3 integers . (From GLSL 1.10.59 specification)
    template <typename T> 
    class _xvec4
    {
    public:
        // Data
        /* ISO C++ version unavailable with VC7.1 ...
            union{T x, r, s;};
            union{T y, g, t;};
            union{T z, b, p;};
            union{T w, a, q;};
        */
        // Solution away from ISO C++ but available with VC7.1 and GCC without -pedantic
        union 
        {
            struct{T x, y, z, w;};
            struct{T r, g, b, a;};
            struct{T s, t, p, q;};
            //__m128 data;
        };

        // Common constructors
	    _xvec4();
        _xvec4(const _xvec4<T>& v);

        // T constructors
        explicit _xvec4(const T x);
        explicit _xvec4(const T a, const T b, const T c, const T d);
        explicit _xvec4(const T a, const T b, const T c, const _xvec2<T>& d);
        explicit _xvec4(const T a, const T b, const T c, const _xvec3<T>& d);
        explicit _xvec4(const T a, const T b, const T c, const _xvec4<T>& d);
        explicit _xvec4(const T a, const T b, const _xvec2<T>& c);
        explicit _xvec4(const T a, const T b, const _xvec3<T>& c);
        explicit _xvec4(const T a, const T b, const _xvec4<T>& c);
        explicit _xvec4(const T a, const _xvec2<T>& b, const T c);
        explicit _xvec4(const T a, const _xvec2<T>& b, const _xvec2<T>& c);
        explicit _xvec4(const T a, const _xvec2<T>& b, const _xvec3<T>& c);
        explicit _xvec4(const T a, const _xvec2<T>& b, const _xvec4<T>& c);
        explicit _xvec4(const T a, const _xvec3<T>& b);
        explicit _xvec4(const T a, const _xvec4<T>& b);
        explicit _xvec4(const _xvec2<T>& a, const T b, const T c);
        explicit _xvec4(const _xvec2<T>& a, const T b, const _xvec2<T>& c);
        explicit _xvec4(const _xvec2<T>& a, const T b, const _xvec3<T>& c);
        explicit _xvec4(const _xvec2<T>& a, const T b, const _xvec4<T>& c);
        explicit _xvec4(const _xvec2<T>& a, const _xvec2<T>& b);
        explicit _xvec4(const _xvec2<T>& a, const _xvec3<T>& b);
        explicit _xvec4(const _xvec2<T>& a, const _xvec4<T>& b);
        explicit _xvec4(const _xvec3<T>& a, const T b);
        explicit _xvec4(const _xvec3<T>& a, const _xvec2<T>& b);
        explicit _xvec4(const _xvec3<T>& a, const _xvec3<T>& b);
        explicit _xvec4(const _xvec3<T>& a, const _xvec4<T>& b);

        // U constructors
        template <typename U> explicit _xvec4(const U x);
        template <typename U> explicit _xvec4(const U a, const U b, const U c, const U d);
        template <typename U> explicit _xvec4(const U a, const U b, const U c, const _xvec2<U>& d);
        template <typename U> explicit _xvec4(const U a, const U b, const U c, const _xvec3<U>& d);
        template <typename U> explicit _xvec4(const U a, const U b, const U c, const _xvec4<U>& d);
        template <typename U> explicit _xvec4(const U a, const U b, const _xvec2<U>& c);
        template <typename U> explicit _xvec4(const U a, const U b, const _xvec3<U>& c);
        template <typename U> explicit _xvec4(const U a, const U b, const _xvec4<U>& c);
        template <typename U> explicit _xvec4(const U a, const _xvec2<U>& b, const U c);
        template <typename U> explicit _xvec4(const U a, const _xvec2<U>& b, const _xvec2<U>& c);
        template <typename U> explicit _xvec4(const U a, const _xvec2<U>& b, const _xvec3<U>& c);
        template <typename U> explicit _xvec4(const U a, const _xvec2<U>& b, const _xvec4<U>& c);
        template <typename U> explicit _xvec4(const U a, const _xvec3<U>& b);
        template <typename U> explicit _xvec4(const U a, const _xvec4<U>& b);
        template <typename U> explicit _xvec4(const _xvec2<U>& a, const U b, const U c);
        template <typename U> explicit _xvec4(const _xvec2<U>& a, const U b, const _xvec2<U>& c);
        template <typename U> explicit _xvec4(const _xvec2<U>& a, const U b, const _xvec3<U>& c);
        template <typename U> explicit _xvec4(const _xvec2<U>& a, const U b, const _xvec4<U>& c);
        template <typename U> explicit _xvec4(const _xvec2<U>& a, const _xvec2<U>& b);
        template <typename U> explicit _xvec4(const _xvec2<U>& a, const _xvec3<U>& b);
        template <typename U> explicit _xvec4(const _xvec2<U>& a, const _xvec4<U>& b);
        template <typename U> explicit _xvec4(const _xvec3<U>& a, const U b);
        template <typename U> explicit _xvec4(const _xvec3<U>& a, const _xvec2<U>& b);
        template <typename U> explicit _xvec4(const _xvec3<U>& a, const _xvec3<U>& b);
        template <typename U> explicit _xvec4(const _xvec3<U>& a, const _xvec4<U>& b);
        template <typename U> explicit _xvec4(const _xvec4<U>& a);

        // Bool constructors
        explicit _xvec4(const bool x);
        explicit _xvec4(const bool a, const bool b, const bool c, const bool d);
        explicit _xvec4(const bool a, const bool b, const bool c, const _bvec2& d);
        explicit _xvec4(const bool a, const bool b, const bool c, const _bvec3& d);
        explicit _xvec4(const bool a, const bool b, const bool c, const _bvec4& d);
        explicit _xvec4(const bool a, const bool b, const _bvec2& c);
        explicit _xvec4(const bool a, const bool b, const _bvec3& c);
        explicit _xvec4(const bool a, const bool b, const _bvec4& c);
        explicit _xvec4(const bool a, const _bvec2& b, const bool c);
        explicit _xvec4(const bool a, const _bvec2& b, const _bvec2& c);
        explicit _xvec4(const bool a, const _bvec2& b, const _bvec3& c);
        explicit _xvec4(const bool a, const _bvec2& b, const _bvec4& c);
        explicit _xvec4(const bool a, const _bvec3& b);
        explicit _xvec4(const bool a, const _bvec4& b);
        explicit _xvec4(const _bvec2& a, const bool b, const bool c);
        explicit _xvec4(const _bvec2& a, const bool b, const _bvec2& c);
        explicit _xvec4(const _bvec2& a, const bool b, const _bvec3& c);
        explicit _xvec4(const _bvec2& a, const bool b, const _bvec4& c);
        explicit _xvec4(const _bvec2& a, const _bvec2& b);
        explicit _xvec4(const _bvec2& a, const _bvec3& b);
        explicit _xvec4(const _bvec2& a, const _bvec4& b);
        explicit _xvec4(const _bvec3& a, const bool b);
        explicit _xvec4(const _bvec3& a, const _bvec2& b);
        explicit _xvec4(const _bvec3& a, const _bvec3& b);
        explicit _xvec4(const _bvec3& a, const _bvec4& b);
        explicit _xvec4(const _bvec4& a);

        // Accesses
        T& operator[](int i);
        T operator[](int i) const;
        operator T*();
	    operator const T*() const;

        // Unary updatable operators
        _xvec4<T>& operator= (const _xvec4<T>& x);
	    _xvec4<T>& operator+=(const T s);
	    _xvec4<T>& operator+=(const _xvec4<T>& v);
	    _xvec4<T>& operator-=(const T s);
	    _xvec4<T>& operator-=(const _xvec4<T>& v);
	    _xvec4<T>& operator*=(const T s);
	    _xvec4<T>& operator*=(const _xvec4<T>& v);
	    _xvec4<T>& operator/=(const T s);
	    _xvec4<T>& operator/=(const _xvec4<T>& v);
	    _xvec4<T>& operator++();
        _xvec4<T>& operator--();

        // 2 components common swizzle operators
        _xvec2<T> _xx() const;
        _xvec2<T> _yx() const;
        _xvec2<T> _zx() const;
        _xvec2<T> _wx() const;
        _xvec2<T> _xy() const;
        _xvec2<T> _yy() const;
        _xvec2<T> _zy() const;
        _xvec2<T> _wy() const;
        _xvec2<T> _xz() const;
        _xvec2<T> _yz() const;
        _xvec2<T> _zz() const;
        _xvec2<T> _wz() const;
        _xvec2<T> _xw() const;
        _xvec2<T> _yw() const;
        _xvec2<T> _zw() const;
        _xvec2<T> _ww() const;

        // 3 components common swizzle operators
        _xvec3<T> _xxx() const;
        _xvec3<T> _yxx() const;
        _xvec3<T> _zxx() const;
        _xvec3<T> _wxx() const;
        _xvec3<T> _xyx() const;
        _xvec3<T> _yyx() const;
        _xvec3<T> _zyx() const;
        _xvec3<T> _wyx() const;
        _xvec3<T> _xzx() const;
        _xvec3<T> _yzx() const;
        _xvec3<T> _zzx() const;
        _xvec3<T> _wzx() const;
        _xvec3<T> _xwx() const;
        _xvec3<T> _ywx() const;
        _xvec3<T> _zwx() const;
        _xvec3<T> _wwx() const;
        _xvec3<T> _xxy() const;
        _xvec3<T> _yxy() const;
        _xvec3<T> _zxy() const;
        _xvec3<T> _wxy() const;
        _xvec3<T> _xyy() const;
        _xvec3<T> _yyy() const;
        _xvec3<T> _zyy() const;
        _xvec3<T> _wyy() const;
        _xvec3<T> _xzy() const;
        _xvec3<T> _yzy() const;
        _xvec3<T> _zzy() const;
        _xvec3<T> _wzy() const;
        _xvec3<T> _xwy() const;
        _xvec3<T> _ywy() const;
        _xvec3<T> _zwy() const;
        _xvec3<T> _wwy() const;
        _xvec3<T> _xxz() const;
        _xvec3<T> _yxz() const;
        _xvec3<T> _zxz() const;
        _xvec3<T> _wxz() const;
        _xvec3<T> _xyz() const;
        _xvec3<T> _yyz() const;
        _xvec3<T> _zyz() const;
        _xvec3<T> _wyz() const;
        _xvec3<T> _xzz() const;
        _xvec3<T> _yzz() const;
        _xvec3<T> _zzz() const;
        _xvec3<T> _wzz() const;
        _xvec3<T> _xwz() const;
        _xvec3<T> _ywz() const;
        _xvec3<T> _zwz() const;
        _xvec3<T> _wwz() const;
        _xvec3<T> _xxw() const;
        _xvec3<T> _yxw() const;
        _xvec3<T> _zxw() const;
        _xvec3<T> _wxw() const;
        _xvec3<T> _xyw() const;
        _xvec3<T> _yyw() const;
        _xvec3<T> _zyw() const;
        _xvec3<T> _wyw() const;
        _xvec3<T> _xzw() const;
        _xvec3<T> _yzw() const;
        _xvec3<T> _zzw() const;
        _xvec3<T> _wzw() const;
        _xvec3<T> _xww() const;
        _xvec3<T> _yww() const;
        _xvec3<T> _zww() const;
        _xvec3<T> _www() const;

        // 4 components common swizzle operators
        _xvec4<T> _xxxx() const;
        _xvec4<T> _yxxx() const;
        _xvec4<T> _zxxx() const;
        _xvec4<T> _wxxx() const;
        _xvec4<T> _xyxx() const;
        _xvec4<T> _yyxx() const;
        _xvec4<T> _zyxx() const;
        _xvec4<T> _wyxx() const;
        _xvec4<T> _xzxx() const;
        _xvec4<T> _yzxx() const;
        _xvec4<T> _zzxx() const;
        _xvec4<T> _wzxx() const;
        _xvec4<T> _xwxx() const;
        _xvec4<T> _ywxx() const;
        _xvec4<T> _zwxx() const;
        _xvec4<T> _wwxx() const;
        _xvec4<T> _xxyx() const;
        _xvec4<T> _yxyx() const;
        _xvec4<T> _zxyx() const;
        _xvec4<T> _wxyx() const;
        _xvec4<T> _xyyx() const;
        _xvec4<T> _yyyx() const;
        _xvec4<T> _zyyx() const;
        _xvec4<T> _wyyx() const;
        _xvec4<T> _xzyx() const;
        _xvec4<T> _yzyx() const;
        _xvec4<T> _zzyx() const;
        _xvec4<T> _wzyx() const;
        _xvec4<T> _xwyx() const;
        _xvec4<T> _ywyx() const;
        _xvec4<T> _zwyx() const;
        _xvec4<T> _wwyx() const;
        _xvec4<T> _xxzx() const;
        _xvec4<T> _yxzx() const;
        _xvec4<T> _zxzx() const;
        _xvec4<T> _wxzx() const;
        _xvec4<T> _xyzx() const;
        _xvec4<T> _yyzx() const;
        _xvec4<T> _zyzx() const;
        _xvec4<T> _wyzx() const;
        _xvec4<T> _xzzx() const;
        _xvec4<T> _yzzx() const;
        _xvec4<T> _zzzx() const;
        _xvec4<T> _wzzx() const;
        _xvec4<T> _xwzx() const;
        _xvec4<T> _ywzx() const;
        _xvec4<T> _zwzx() const;
        _xvec4<T> _wwzx() const;
        _xvec4<T> _xxwx() const;
        _xvec4<T> _yxwx() const;
        _xvec4<T> _zxwx() const;
        _xvec4<T> _wxwx() const;
        _xvec4<T> _xywx() const;
        _xvec4<T> _yywx() const;
        _xvec4<T> _zywx() const;
        _xvec4<T> _wywx() const;
        _xvec4<T> _xzwx() const;
        _xvec4<T> _yzwx() const;
        _xvec4<T> _zzwx() const;
        _xvec4<T> _wzwx() const;
        _xvec4<T> _xwwx() const;
        _xvec4<T> _ywwx() const;
        _xvec4<T> _zwwx() const;
        _xvec4<T> _wwwx() const;
        _xvec4<T> _xxxy() const;
        _xvec4<T> _yxxy() const;
        _xvec4<T> _zxxy() const;
        _xvec4<T> _wxxy() const;
        _xvec4<T> _xyxy() const;
        _xvec4<T> _yyxy() const;
        _xvec4<T> _zyxy() const;
        _xvec4<T> _wyxy() const;
        _xvec4<T> _xzxy() const;
        _xvec4<T> _yzxy() const;
        _xvec4<T> _zzxy() const;
        _xvec4<T> _wzxy() const;
        _xvec4<T> _xwxy() const;
        _xvec4<T> _ywxy() const;
        _xvec4<T> _zwxy() const;
        _xvec4<T> _wwxy() const;
        _xvec4<T> _xxyy() const;
        _xvec4<T> _yxyy() const;
        _xvec4<T> _zxyy() const;
        _xvec4<T> _wxyy() const;
        _xvec4<T> _xyyy() const;
        _xvec4<T> _yyyy() const;
        _xvec4<T> _zyyy() const;
        _xvec4<T> _wyyy() const;
        _xvec4<T> _xzyy() const;
        _xvec4<T> _yzyy() const;
        _xvec4<T> _zzyy() const;
        _xvec4<T> _wzyy() const;
        _xvec4<T> _xwyy() const;
        _xvec4<T> _ywyy() const;
        _xvec4<T> _zwyy() const;
        _xvec4<T> _wwyy() const;
        _xvec4<T> _xxzy() const;
        _xvec4<T> _yxzy() const;
        _xvec4<T> _zxzy() const;
        _xvec4<T> _wxzy() const;
        _xvec4<T> _xyzy() const;
        _xvec4<T> _yyzy() const;
        _xvec4<T> _zyzy() const;
        _xvec4<T> _wyzy() const;
        _xvec4<T> _xzzy() const;
        _xvec4<T> _yzzy() const;
        _xvec4<T> _zzzy() const;
        _xvec4<T> _wzzy() const;
        _xvec4<T> _xwzy() const;
        _xvec4<T> _ywzy() const;
        _xvec4<T> _zwzy() const;
        _xvec4<T> _wwzy() const;
        _xvec4<T> _xxwy() const;
        _xvec4<T> _yxwy() const;
        _xvec4<T> _zxwy() const;
        _xvec4<T> _wxwy() const;
        _xvec4<T> _xywy() const;
        _xvec4<T> _yywy() const;
        _xvec4<T> _zywy() const;
        _xvec4<T> _wywy() const;
        _xvec4<T> _xzwy() const;
        _xvec4<T> _yzwy() const;
        _xvec4<T> _zzwy() const;
        _xvec4<T> _wzwy() const;
        _xvec4<T> _xwwy() const;
        _xvec4<T> _ywwy() const;
        _xvec4<T> _zwwy() const;
        _xvec4<T> _wwwy() const;
        _xvec4<T> _xxxz() const;
        _xvec4<T> _yxxz() const;
        _xvec4<T> _zxxz() const;
        _xvec4<T> _wxxz() const;
        _xvec4<T> _xyxz() const;
        _xvec4<T> _yyxz() const;
        _xvec4<T> _zyxz() const;
        _xvec4<T> _wyxz() const;
        _xvec4<T> _xzxz() const;
        _xvec4<T> _yzxz() const;
        _xvec4<T> _zzxz() const;
        _xvec4<T> _wzxz() const;
        _xvec4<T> _xwxz() const;
        _xvec4<T> _ywxz() const;
        _xvec4<T> _zwxz() const;
        _xvec4<T> _wwxz() const;
        _xvec4<T> _xxyz() const;
        _xvec4<T> _yxyz() const;
        _xvec4<T> _zxyz() const;
        _xvec4<T> _wxyz() const;
        _xvec4<T> _xyyz() const;
        _xvec4<T> _yyyz() const;
        _xvec4<T> _zyyz() const;
        _xvec4<T> _wyyz() const;
        _xvec4<T> _xzyz() const;
        _xvec4<T> _yzyz() const;
        _xvec4<T> _zzyz() const;
        _xvec4<T> _wzyz() const;
        _xvec4<T> _xwyz() const;
        _xvec4<T> _ywyz() const;
        _xvec4<T> _zwyz() const;
        _xvec4<T> _wwyz() const;
        _xvec4<T> _xxzz() const;
        _xvec4<T> _yxzz() const;
        _xvec4<T> _zxzz() const;
        _xvec4<T> _wxzz() const;
        _xvec4<T> _xyzz() const;
        _xvec4<T> _yyzz() const;
        _xvec4<T> _zyzz() const;
        _xvec4<T> _wyzz() const;
        _xvec4<T> _xzzz() const;
        _xvec4<T> _yzzz() const;
        _xvec4<T> _zzzz() const;
        _xvec4<T> _wzzz() const;
        _xvec4<T> _xwzz() const;
        _xvec4<T> _ywzz() const;
        _xvec4<T> _zwzz() const;
        _xvec4<T> _wwzz() const;
        _xvec4<T> _xxwz() const;
        _xvec4<T> _yxwz() const;
        _xvec4<T> _zxwz() const;
        _xvec4<T> _wxwz() const;
        _xvec4<T> _xywz() const;
        _xvec4<T> _yywz() const;
        _xvec4<T> _zywz() const;
        _xvec4<T> _wywz() const;
        _xvec4<T> _xzwz() const;
        _xvec4<T> _yzwz() const;
        _xvec4<T> _zzwz() const;
        _xvec4<T> _wzwz() const;
        _xvec4<T> _xwwz() const;
        _xvec4<T> _ywwz() const;
        _xvec4<T> _zwwz() const;
        _xvec4<T> _wwwz() const;
        _xvec4<T> _xxxw() const;
        _xvec4<T> _yxxw() const;
        _xvec4<T> _zxxw() const;
        _xvec4<T> _wxxw() const;
        _xvec4<T> _xyxw() const;
        _xvec4<T> _yyxw() const;
        _xvec4<T> _zyxw() const;
        _xvec4<T> _wyxw() const;
        _xvec4<T> _xzxw() const;
        _xvec4<T> _yzxw() const;
        _xvec4<T> _zzxw() const;
        _xvec4<T> _wzxw() const;
        _xvec4<T> _xwxw() const;
        _xvec4<T> _ywxw() const;
        _xvec4<T> _zwxw() const;
        _xvec4<T> _wwxw() const;
        _xvec4<T> _xxyw() const;
        _xvec4<T> _yxyw() const;
        _xvec4<T> _zxyw() const;
        _xvec4<T> _wxyw() const;
        _xvec4<T> _xyyw() const;
        _xvec4<T> _yyyw() const;
        _xvec4<T> _zyyw() const;
        _xvec4<T> _wyyw() const;
        _xvec4<T> _xzyw() const;
        _xvec4<T> _yzyw() const;
        _xvec4<T> _zzyw() const;
        _xvec4<T> _wzyw() const;
        _xvec4<T> _xwyw() const;
        _xvec4<T> _ywyw() const;
        _xvec4<T> _zwyw() const;
        _xvec4<T> _wwyw() const;
        _xvec4<T> _xxzw() const;
        _xvec4<T> _yxzw() const;
        _xvec4<T> _zxzw() const;
        _xvec4<T> _wxzw() const;
        _xvec4<T> _xyzw() const;
        _xvec4<T> _yyzw() const;
        _xvec4<T> _zyzw() const;
        _xvec4<T> _wyzw() const;
        _xvec4<T> _xzzw() const;
        _xvec4<T> _yzzw() const;
        _xvec4<T> _zzzw() const;
        _xvec4<T> _wzzw() const;
        _xvec4<T> _xwzw() const;
        _xvec4<T> _ywzw() const;
        _xvec4<T> _zwzw() const;
        _xvec4<T> _wwzw() const;
        _xvec4<T> _xxww() const;
        _xvec4<T> _yxww() const;
        _xvec4<T> _zxww() const;
        _xvec4<T> _wxww() const;
        _xvec4<T> _xyww() const;
        _xvec4<T> _yyww() const;
        _xvec4<T> _zyww() const;
        _xvec4<T> _wyww() const;
        _xvec4<T> _xzww() const;
        _xvec4<T> _yzww() const;
        _xvec4<T> _zzww() const;
        _xvec4<T> _wzww() const;
        _xvec4<T> _xwww() const;
        _xvec4<T> _ywww() const;
        _xvec4<T> _zwww() const;
        _xvec4<T> _wwww() const;

        // 2 components color swizzle operators
        _xvec2<T> _rr() const;
        _xvec2<T> _gr() const;
        _xvec2<T> _br() const;
        _xvec2<T> _ar() const;
        _xvec2<T> _rg() const;
        _xvec2<T> _gg() const;
        _xvec2<T> _bg() const;
        _xvec2<T> _ag() const;
        _xvec2<T> _rb() const;
        _xvec2<T> _gb() const;
        _xvec2<T> _bb() const;
        _xvec2<T> _ab() const;
        _xvec2<T> _ra() const;
        _xvec2<T> _ga() const;
        _xvec2<T> _ba() const;
        _xvec2<T> _aa() const;

        // 3 components color swizzle operators
        _xvec3<T> _rrr() const;
        _xvec3<T> _grr() const;
        _xvec3<T> _brr() const;
        _xvec3<T> _arr() const;
        _xvec3<T> _rgr() const;
        _xvec3<T> _ggr() const;
        _xvec3<T> _bgr() const;
        _xvec3<T> _agr() const;
        _xvec3<T> _rbr() const;
        _xvec3<T> _gbr() const;
        _xvec3<T> _bbr() const;
        _xvec3<T> _abr() const;
        _xvec3<T> _rar() const;
        _xvec3<T> _gar() const;
        _xvec3<T> _bar() const;
        _xvec3<T> _aar() const;
        _xvec3<T> _rrg() const;
        _xvec3<T> _grg() const;
        _xvec3<T> _brg() const;
        _xvec3<T> _arg() const;
        _xvec3<T> _rgg() const;
        _xvec3<T> _ggg() const;
        _xvec3<T> _bgg() const;
        _xvec3<T> _agg() const;
        _xvec3<T> _rbg() const;
        _xvec3<T> _gbg() const;
        _xvec3<T> _bbg() const;
        _xvec3<T> _abg() const;
        _xvec3<T> _rag() const;
        _xvec3<T> _gag() const;
        _xvec3<T> _bag() const;
        _xvec3<T> _aag() const;
        _xvec3<T> _rrb() const;
        _xvec3<T> _grb() const;
        _xvec3<T> _brb() const;
        _xvec3<T> _arb() const;
        _xvec3<T> _rgb() const;
        _xvec3<T> _ggb() const;
        _xvec3<T> _bgb() const;
        _xvec3<T> _agb() const;
        _xvec3<T> _rbb() const;
        _xvec3<T> _gbb() const;
        _xvec3<T> _bbb() const;
        _xvec3<T> _abb() const;
        _xvec3<T> _rab() const;
        _xvec3<T> _gab() const;
        _xvec3<T> _bab() const;
        _xvec3<T> _aab() const;
        _xvec3<T> _rra() const;
        _xvec3<T> _gra() const;
        _xvec3<T> _bra() const;
        _xvec3<T> _ara() const;
        _xvec3<T> _rga() const;
        _xvec3<T> _gga() const;
        _xvec3<T> _bga() const;
        _xvec3<T> _aga() const;
        _xvec3<T> _rba() const;
        _xvec3<T> _gba() const;
        _xvec3<T> _bba() const;
        _xvec3<T> _aba() const;
        _xvec3<T> _raa() const;
        _xvec3<T> _gaa() const;
        _xvec3<T> _baa() const;
        _xvec3<T> _aaa() const;

        // 4 components color swizzle operators
        _xvec4<T> _rrrr() const;
        _xvec4<T> _grrr() const;
        _xvec4<T> _brrr() const;
        _xvec4<T> _arrr() const;
        _xvec4<T> _rgrr() const;
        _xvec4<T> _ggrr() const;
        _xvec4<T> _bgrr() const;
        _xvec4<T> _agrr() const;
        _xvec4<T> _rbrr() const;
        _xvec4<T> _gbrr() const;
        _xvec4<T> _bbrr() const;
        _xvec4<T> _abrr() const;
        _xvec4<T> _rarr() const;
        _xvec4<T> _garr() const;
        _xvec4<T> _barr() const;
        _xvec4<T> _aarr() const;
        _xvec4<T> _rrgr() const;
        _xvec4<T> _grgr() const;
        _xvec4<T> _brgr() const;
        _xvec4<T> _argr() const;
        _xvec4<T> _rggr() const;
        _xvec4<T> _gggr() const;
        _xvec4<T> _bggr() const;
        _xvec4<T> _aggr() const;
        _xvec4<T> _rbgr() const;
        _xvec4<T> _gbgr() const;
        _xvec4<T> _bbgr() const;
        _xvec4<T> _abgr() const;
        _xvec4<T> _ragr() const;
        _xvec4<T> _gagr() const;
        _xvec4<T> _bagr() const;
        _xvec4<T> _aagr() const;
        _xvec4<T> _rrbr() const;
        _xvec4<T> _grbr() const;
        _xvec4<T> _brbr() const;
        _xvec4<T> _arbr() const;
        _xvec4<T> _rgbr() const;
        _xvec4<T> _ggbr() const;
        _xvec4<T> _bgbr() const;
        _xvec4<T> _agbr() const;
        _xvec4<T> _rbbr() const;
        _xvec4<T> _gbbr() const;
        _xvec4<T> _bbbr() const;
        _xvec4<T> _abbr() const;
        _xvec4<T> _rabr() const;
        _xvec4<T> _gabr() const;
        _xvec4<T> _babr() const;
        _xvec4<T> _aabr() const;
        _xvec4<T> _rrar() const;
        _xvec4<T> _grar() const;
        _xvec4<T> _brar() const;
        _xvec4<T> _arar() const;
        _xvec4<T> _rgar() const;
        _xvec4<T> _ggar() const;
        _xvec4<T> _bgar() const;
        _xvec4<T> _agar() const;
        _xvec4<T> _rbar() const;
        _xvec4<T> _gbar() const;
        _xvec4<T> _bbar() const;
        _xvec4<T> _abar() const;
        _xvec4<T> _raar() const;
        _xvec4<T> _gaar() const;
        _xvec4<T> _baar() const;
        _xvec4<T> _aaar() const;
        _xvec4<T> _rrrg() const;
        _xvec4<T> _grrg() const;
        _xvec4<T> _brrg() const;
        _xvec4<T> _arrg() const;
        _xvec4<T> _rgrg() const;
        _xvec4<T> _ggrg() const;
        _xvec4<T> _bgrg() const;
        _xvec4<T> _agrg() const;
        _xvec4<T> _rbrg() const;
        _xvec4<T> _gbrg() const;
        _xvec4<T> _bbrg() const;
        _xvec4<T> _abrg() const;
        _xvec4<T> _rarg() const;
        _xvec4<T> _garg() const;
        _xvec4<T> _barg() const;
        _xvec4<T> _aarg() const;
        _xvec4<T> _rrgg() const;
        _xvec4<T> _grgg() const;
        _xvec4<T> _brgg() const;
        _xvec4<T> _argg() const;
        _xvec4<T> _rggg() const;
        _xvec4<T> _gggg() const;
        _xvec4<T> _bggg() const;
        _xvec4<T> _aggg() const;
        _xvec4<T> _rbgg() const;
        _xvec4<T> _gbgg() const;
        _xvec4<T> _bbgg() const;
        _xvec4<T> _abgg() const;
        _xvec4<T> _ragg() const;
        _xvec4<T> _gagg() const;
        _xvec4<T> _bagg() const;
        _xvec4<T> _aagg() const;
        _xvec4<T> _rrbg() const;
        _xvec4<T> _grbg() const;
        _xvec4<T> _brbg() const;
        _xvec4<T> _arbg() const;
        _xvec4<T> _rgbg() const;
        _xvec4<T> _ggbg() const;
        _xvec4<T> _bgbg() const;
        _xvec4<T> _agbg() const;
        _xvec4<T> _rbbg() const;
        _xvec4<T> _gbbg() const;
        _xvec4<T> _bbbg() const;
        _xvec4<T> _abbg() const;
        _xvec4<T> _rabg() const;
        _xvec4<T> _gabg() const;
        _xvec4<T> _babg() const;
        _xvec4<T> _aabg() const;
        _xvec4<T> _rrag() const;
        _xvec4<T> _grag() const;
        _xvec4<T> _brag() const;
        _xvec4<T> _arag() const;
        _xvec4<T> _rgag() const;
        _xvec4<T> _ggag() const;
        _xvec4<T> _bgag() const;
        _xvec4<T> _agag() const;
        _xvec4<T> _rbag() const;
        _xvec4<T> _gbag() const;
        _xvec4<T> _bbag() const;
        _xvec4<T> _abag() const;
        _xvec4<T> _raag() const;
        _xvec4<T> _gaag() const;
        _xvec4<T> _baag() const;
        _xvec4<T> _aaag() const;
        _xvec4<T> _rrrb() const;
        _xvec4<T> _grrb() const;
        _xvec4<T> _brrb() const;
        _xvec4<T> _arrb() const;
        _xvec4<T> _rgrb() const;
        _xvec4<T> _ggrb() const;
        _xvec4<T> _bgrb() const;
        _xvec4<T> _agrb() const;
        _xvec4<T> _rbrb() const;
        _xvec4<T> _gbrb() const;
        _xvec4<T> _bbrb() const;
        _xvec4<T> _abrb() const;
        _xvec4<T> _rarb() const;
        _xvec4<T> _garb() const;
        _xvec4<T> _barb() const;
        _xvec4<T> _aarb() const;
        _xvec4<T> _rrgb() const;
        _xvec4<T> _grgb() const;
        _xvec4<T> _brgb() const;
        _xvec4<T> _argb() const;
        _xvec4<T> _rggb() const;
        _xvec4<T> _gggb() const;
        _xvec4<T> _bggb() const;
        _xvec4<T> _aggb() const;
        _xvec4<T> _rbgb() const;
        _xvec4<T> _gbgb() const;
        _xvec4<T> _bbgb() const;
        _xvec4<T> _abgb() const;
        _xvec4<T> _ragb() const;
        _xvec4<T> _gagb() const;
        _xvec4<T> _bagb() const;
        _xvec4<T> _aagb() const;
        _xvec4<T> _rrbb() const;
        _xvec4<T> _grbb() const;
        _xvec4<T> _brbb() const;
        _xvec4<T> _arbb() const;
        _xvec4<T> _rgbb() const;
        _xvec4<T> _ggbb() const;
        _xvec4<T> _bgbb() const;
        _xvec4<T> _agbb() const;
        _xvec4<T> _rbbb() const;
        _xvec4<T> _gbbb() const;
        _xvec4<T> _bbbb() const;
        _xvec4<T> _abbb() const;
        _xvec4<T> _rabb() const;
        _xvec4<T> _gabb() const;
        _xvec4<T> _babb() const;
        _xvec4<T> _aabb() const;
        _xvec4<T> _rrab() const;
        _xvec4<T> _grab() const;
        _xvec4<T> _brab() const;
        _xvec4<T> _arab() const;
        _xvec4<T> _rgab() const;
        _xvec4<T> _ggab() const;
        _xvec4<T> _bgab() const;
        _xvec4<T> _agab() const;
        _xvec4<T> _rbab() const;
        _xvec4<T> _gbab() const;
        _xvec4<T> _bbab() const;
        _xvec4<T> _abab() const;
        _xvec4<T> _raab() const;
        _xvec4<T> _gaab() const;
        _xvec4<T> _baab() const;
        _xvec4<T> _aaab() const;
        _xvec4<T> _rrra() const;
        _xvec4<T> _grra() const;
        _xvec4<T> _brra() const;
        _xvec4<T> _arra() const;
        _xvec4<T> _rgra() const;
        _xvec4<T> _ggra() const;
        _xvec4<T> _bgra() const;
        _xvec4<T> _agra() const;
        _xvec4<T> _rbra() const;
        _xvec4<T> _gbra() const;
        _xvec4<T> _bbra() const;
        _xvec4<T> _abra() const;
        _xvec4<T> _rara() const;
        _xvec4<T> _gara() const;
        _xvec4<T> _bara() const;
        _xvec4<T> _aara() const;
        _xvec4<T> _rrga() const;
        _xvec4<T> _grga() const;
        _xvec4<T> _brga() const;
        _xvec4<T> _arga() const;
        _xvec4<T> _rgga() const;
        _xvec4<T> _ggga() const;
        _xvec4<T> _bgga() const;
        _xvec4<T> _agga() const;
        _xvec4<T> _rbga() const;
        _xvec4<T> _gbga() const;
        _xvec4<T> _bbga() const;
        _xvec4<T> _abga() const;
        _xvec4<T> _raga() const;
        _xvec4<T> _gaga() const;
        _xvec4<T> _baga() const;
        _xvec4<T> _aaga() const;
        _xvec4<T> _rrba() const;
        _xvec4<T> _grba() const;
        _xvec4<T> _brba() const;
        _xvec4<T> _arba() const;
        _xvec4<T> _rgba() const;
        _xvec4<T> _ggba() const;
        _xvec4<T> _bgba() const;
        _xvec4<T> _agba() const;
        _xvec4<T> _rbba() const;
        _xvec4<T> _gbba() const;
        _xvec4<T> _bbba() const;
        _xvec4<T> _abba() const;
        _xvec4<T> _raba() const;
        _xvec4<T> _gaba() const;
        _xvec4<T> _baba() const;
        _xvec4<T> _aaba() const;
        _xvec4<T> _rraa() const;
        _xvec4<T> _graa() const;
        _xvec4<T> _braa() const;
        _xvec4<T> _araa() const;
        _xvec4<T> _rgaa() const;
        _xvec4<T> _ggaa() const;
        _xvec4<T> _bgaa() const;
        _xvec4<T> _agaa() const;
        _xvec4<T> _rbaa() const;
        _xvec4<T> _gbaa() const;
        _xvec4<T> _bbaa() const;
        _xvec4<T> _abaa() const;
        _xvec4<T> _raaa() const;
        _xvec4<T> _gaaa() const;
        _xvec4<T> _baaa() const;
        _xvec4<T> _aaaa() const;

        // 2 components texcoord swizzle operators
        _xvec2<T> _ss() const;
        _xvec2<T> _ts() const;
        _xvec2<T> _ps() const;
        _xvec2<T> _qs() const;
        _xvec2<T> _st() const;
        _xvec2<T> _tt() const;
        _xvec2<T> _pt() const;
        _xvec2<T> _qt() const;
        _xvec2<T> _sp() const;
        _xvec2<T> _tp() const;
        _xvec2<T> _pp() const;
        _xvec2<T> _qp() const;
        _xvec2<T> _sq() const;
        _xvec2<T> _tq() const;
        _xvec2<T> _pq() const;
        _xvec2<T> _qq() const;

        // 3 components texcoosd swizzle opesqtoss
        _xvec3<T> _sss() const;
        _xvec3<T> _tss() const;
        _xvec3<T> _pss() const;
        _xvec3<T> _qss() const;
        _xvec3<T> _sts() const;
        _xvec3<T> _tts() const;
        _xvec3<T> _pts() const;
        _xvec3<T> _qts() const;
        _xvec3<T> _sps() const;
        _xvec3<T> _tps() const;
        _xvec3<T> _pps() const;
        _xvec3<T> _qps() const;
        _xvec3<T> _sqs() const;
        _xvec3<T> _tqs() const;
        _xvec3<T> _pqs() const;
        _xvec3<T> _qqs() const;
        _xvec3<T> _sst() const;
        _xvec3<T> _tst() const;
        _xvec3<T> _pst() const;
        _xvec3<T> _qst() const;
        _xvec3<T> _stt() const;
        _xvec3<T> _ttt() const;
        _xvec3<T> _ptt() const;
        _xvec3<T> _qtt() const;
        _xvec3<T> _spt() const;
        _xvec3<T> _tpt() const;
        _xvec3<T> _ppt() const;
        _xvec3<T> _qpt() const;
        _xvec3<T> _sqt() const;
        _xvec3<T> _tqt() const;
        _xvec3<T> _pqt() const;
        _xvec3<T> _qqt() const;
        _xvec3<T> _ssp() const;
        _xvec3<T> _tsp() const;
        _xvec3<T> _psp() const;
        _xvec3<T> _qsp() const;
        _xvec3<T> _stp() const;
        _xvec3<T> _ttp() const;
        _xvec3<T> _ptp() const;
        _xvec3<T> _qtp() const;
        _xvec3<T> _spp() const;
        _xvec3<T> _tpp() const;
        _xvec3<T> _ppp() const;
        _xvec3<T> _qpp() const;
        _xvec3<T> _sqp() const;
        _xvec3<T> _tqp() const;
        _xvec3<T> _pqp() const;
        _xvec3<T> _qqp() const;
        _xvec3<T> _ssq() const;
        _xvec3<T> _tsq() const;
        _xvec3<T> _psq() const;
        _xvec3<T> _qsq() const;
        _xvec3<T> _stq() const;
        _xvec3<T> _ttq() const;
        _xvec3<T> _ptq() const;
        _xvec3<T> _qtq() const;
        _xvec3<T> _spq() const;
        _xvec3<T> _tpq() const;
        _xvec3<T> _ppq() const;
        _xvec3<T> _qpq() const;
        _xvec3<T> _sqq() const;
        _xvec3<T> _tqq() const;
        _xvec3<T> _pqq() const;
        _xvec3<T> _qqq() const;

        // 4 components texcoosd swizzle opesqtoss
        _xvec4<T> _ssss() const;
        _xvec4<T> _tsss() const;
        _xvec4<T> _psss() const;
        _xvec4<T> _qsss() const;
        _xvec4<T> _stss() const;
        _xvec4<T> _ttss() const;
        _xvec4<T> _ptss() const;
        _xvec4<T> _qtss() const;
        _xvec4<T> _spss() const;
        _xvec4<T> _tpss() const;
        _xvec4<T> _ppss() const;
        _xvec4<T> _qpss() const;
        _xvec4<T> _sqss() const;
        _xvec4<T> _tqss() const;
        _xvec4<T> _pqss() const;
        _xvec4<T> _qqss() const;
        _xvec4<T> _ssts() const;
        _xvec4<T> _tsts() const;
        _xvec4<T> _psts() const;
        _xvec4<T> _qsts() const;
        _xvec4<T> _stts() const;
        _xvec4<T> _ttts() const;
        _xvec4<T> _ptts() const;
        _xvec4<T> _qtts() const;
        _xvec4<T> _spts() const;
        _xvec4<T> _tpts() const;
        _xvec4<T> _ppts() const;
        _xvec4<T> _qpts() const;
        _xvec4<T> _sqts() const;
        _xvec4<T> _tqts() const;
        _xvec4<T> _pqts() const;
        _xvec4<T> _qqts() const;
        _xvec4<T> _ssps() const;
        _xvec4<T> _tsps() const;
        _xvec4<T> _psps() const;
        _xvec4<T> _qsps() const;
        _xvec4<T> _stps() const;
        _xvec4<T> _ttps() const;
        _xvec4<T> _ptps() const;
        _xvec4<T> _qtps() const;
        _xvec4<T> _spps() const;
        _xvec4<T> _tpps() const;
        _xvec4<T> _ppps() const;
        _xvec4<T> _qpps() const;
        _xvec4<T> _sqps() const;
        _xvec4<T> _tqps() const;
        _xvec4<T> _pqps() const;
        _xvec4<T> _qqps() const;
        _xvec4<T> _ssqs() const;
        _xvec4<T> _tsqs() const;
        _xvec4<T> _psqs() const;
        _xvec4<T> _qsqs() const;
        _xvec4<T> _stqs() const;
        _xvec4<T> _ttqs() const;
        _xvec4<T> _ptqs() const;
        _xvec4<T> _qtqs() const;
        _xvec4<T> _spqs() const;
        _xvec4<T> _tpqs() const;
        _xvec4<T> _ppqs() const;
        _xvec4<T> _qpqs() const;
        _xvec4<T> _sqqs() const;
        _xvec4<T> _tqqs() const;
        _xvec4<T> _pqqs() const;
        _xvec4<T> _qqqs() const;
        _xvec4<T> _ssst() const;
        _xvec4<T> _tsst() const;
        _xvec4<T> _psst() const;
        _xvec4<T> _qsst() const;
        _xvec4<T> _stst() const;
        _xvec4<T> _ttst() const;
        _xvec4<T> _ptst() const;
        _xvec4<T> _qtst() const;
        _xvec4<T> _spst() const;
        _xvec4<T> _tpst() const;
        _xvec4<T> _ppst() const;
        _xvec4<T> _qpst() const;
        _xvec4<T> _sqst() const;
        _xvec4<T> _tqst() const;
        _xvec4<T> _pqst() const;
        _xvec4<T> _qqst() const;
        _xvec4<T> _sstt() const;
        _xvec4<T> _tstt() const;
        _xvec4<T> _pstt() const;
        _xvec4<T> _qstt() const;
        _xvec4<T> _sttt() const;
        _xvec4<T> _tttt() const;
        _xvec4<T> _pttt() const;
        _xvec4<T> _qttt() const;
        _xvec4<T> _sptt() const;
        _xvec4<T> _tptt() const;
        _xvec4<T> _pptt() const;
        _xvec4<T> _qptt() const;
        _xvec4<T> _sqtt() const;
        _xvec4<T> _tqtt() const;
        _xvec4<T> _pqtt() const;
        _xvec4<T> _qqtt() const;
        _xvec4<T> _sspt() const;
        _xvec4<T> _tspt() const;
        _xvec4<T> _pspt() const;
        _xvec4<T> _qspt() const;
        _xvec4<T> _stpt() const;
        _xvec4<T> _ttpt() const;
        _xvec4<T> _ptpt() const;
        _xvec4<T> _qtpt() const;
        _xvec4<T> _sppt() const;
        _xvec4<T> _tppt() const;
        _xvec4<T> _pppt() const;
        _xvec4<T> _qppt() const;
        _xvec4<T> _sqpt() const;
        _xvec4<T> _tqpt() const;
        _xvec4<T> _pqpt() const;
        _xvec4<T> _qqpt() const;
        _xvec4<T> _ssqt() const;
        _xvec4<T> _tsqt() const;
        _xvec4<T> _psqt() const;
        _xvec4<T> _qsqt() const;
        _xvec4<T> _stqt() const;
        _xvec4<T> _ttqt() const;
        _xvec4<T> _ptqt() const;
        _xvec4<T> _qtqt() const;
        _xvec4<T> _spqt() const;
        _xvec4<T> _tpqt() const;
        _xvec4<T> _ppqt() const;
        _xvec4<T> _qpqt() const;
        _xvec4<T> _sqqt() const;
        _xvec4<T> _tqqt() const;
        _xvec4<T> _pqqt() const;
        _xvec4<T> _qqqt() const;
        _xvec4<T> _sssp() const;
        _xvec4<T> _tssp() const;
        _xvec4<T> _pssp() const;
        _xvec4<T> _qssp() const;
        _xvec4<T> _stsp() const;
        _xvec4<T> _ttsp() const;
        _xvec4<T> _ptsp() const;
        _xvec4<T> _qtsp() const;
        _xvec4<T> _spsp() const;
        _xvec4<T> _tpsp() const;
        _xvec4<T> _ppsp() const;
        _xvec4<T> _qpsp() const;
        _xvec4<T> _sqsp() const;
        _xvec4<T> _tqsp() const;
        _xvec4<T> _pqsp() const;
        _xvec4<T> _qqsp() const;
        _xvec4<T> _sstp() const;
        _xvec4<T> _tstp() const;
        _xvec4<T> _pstp() const;
        _xvec4<T> _qstp() const;
        _xvec4<T> _sttp() const;
        _xvec4<T> _tttp() const;
        _xvec4<T> _pttp() const;
        _xvec4<T> _qttp() const;
        _xvec4<T> _sptp() const;
        _xvec4<T> _tptp() const;
        _xvec4<T> _pptp() const;
        _xvec4<T> _qptp() const;
        _xvec4<T> _sqtp() const;
        _xvec4<T> _tqtp() const;
        _xvec4<T> _pqtp() const;
        _xvec4<T> _qqtp() const;
        _xvec4<T> _sspp() const;
        _xvec4<T> _tspp() const;
        _xvec4<T> _pspp() const;
        _xvec4<T> _qspp() const;
        _xvec4<T> _stpp() const;
        _xvec4<T> _ttpp() const;
        _xvec4<T> _ptpp() const;
        _xvec4<T> _qtpp() const;
        _xvec4<T> _sppp() const;
        _xvec4<T> _tppp() const;
        _xvec4<T> _pppp() const;
        _xvec4<T> _qppp() const;
        _xvec4<T> _sqpp() const;
        _xvec4<T> _tqpp() const;
        _xvec4<T> _pqpp() const;
        _xvec4<T> _qqpp() const;
        _xvec4<T> _ssqp() const;
        _xvec4<T> _tsqp() const;
        _xvec4<T> _psqp() const;
        _xvec4<T> _qsqp() const;
        _xvec4<T> _stqp() const;
        _xvec4<T> _ttqp() const;
        _xvec4<T> _ptqp() const;
        _xvec4<T> _qtqp() const;
        _xvec4<T> _spqp() const;
        _xvec4<T> _tpqp() const;
        _xvec4<T> _ppqp() const;
        _xvec4<T> _qpqp() const;
        _xvec4<T> _sqqp() const;
        _xvec4<T> _tqqp() const;
        _xvec4<T> _pqqp() const;
        _xvec4<T> _qqqp() const;
        _xvec4<T> _sssq() const;
        _xvec4<T> _tssq() const;
        _xvec4<T> _pssq() const;
        _xvec4<T> _qssq() const;
        _xvec4<T> _stsq() const;
        _xvec4<T> _ttsq() const;
        _xvec4<T> _ptsq() const;
        _xvec4<T> _qtsq() const;
        _xvec4<T> _spsq() const;
        _xvec4<T> _tpsq() const;
        _xvec4<T> _ppsq() const;
        _xvec4<T> _qpsq() const;
        _xvec4<T> _sqsq() const;
        _xvec4<T> _tqsq() const;
        _xvec4<T> _pqsq() const;
        _xvec4<T> _qqsq() const;
        _xvec4<T> _sstq() const;
        _xvec4<T> _tstq() const;
        _xvec4<T> _pstq() const;
        _xvec4<T> _qstq() const;
        _xvec4<T> _sttq() const;
        _xvec4<T> _tttq() const;
        _xvec4<T> _pttq() const;
        _xvec4<T> _qttq() const;
        _xvec4<T> _sptq() const;
        _xvec4<T> _tptq() const;
        _xvec4<T> _pptq() const;
        _xvec4<T> _qptq() const;
        _xvec4<T> _sqtq() const;
        _xvec4<T> _tqtq() const;
        _xvec4<T> _pqtq() const;
        _xvec4<T> _qqtq() const;
        _xvec4<T> _sspq() const;
        _xvec4<T> _tspq() const;
        _xvec4<T> _pspq() const;
        _xvec4<T> _qspq() const;
        _xvec4<T> _stpq() const;
        _xvec4<T> _ttpq() const;
        _xvec4<T> _ptpq() const;
        _xvec4<T> _qtpq() const;
        _xvec4<T> _sppq() const;
        _xvec4<T> _tppq() const;
        _xvec4<T> _pppq() const;
        _xvec4<T> _qppq() const;
        _xvec4<T> _sqpq() const;
        _xvec4<T> _tqpq() const;
        _xvec4<T> _pqpq() const;
        _xvec4<T> _qqpq() const;
        _xvec4<T> _ssqq() const;
        _xvec4<T> _tsqq() const;
        _xvec4<T> _psqq() const;
        _xvec4<T> _qsqq() const;
        _xvec4<T> _stqq() const;
        _xvec4<T> _ttqq() const;
        _xvec4<T> _ptqq() const;
        _xvec4<T> _qtqq() const;
        _xvec4<T> _spqq() const;
        _xvec4<T> _tpqq() const;
        _xvec4<T> _ppqq() const;
        _xvec4<T> _qpqq() const;
        _xvec4<T> _sqqq() const;
        _xvec4<T> _tqqq() const;
        _xvec4<T> _pqqq() const;
        _xvec4<T> _qqqq() const;
    };

    // Binary operators
    template <typename T>
	_xvec4<T> operator+ (const _xvec4<T>& v, const T s);

    template <typename T>
    _xvec4<T> operator+ (const T s, const _xvec4<T>& v);

    template <typename T>
    _xvec4<T> operator+ (const _xvec4<T>& v1, const _xvec4<T>& v2);
    
    template <typename T>
	_xvec4<T> operator- (const _xvec4<T>& v, const T s);

    template <typename T>
    _xvec4<T> operator- (const T s, const _xvec4<T>& v);

    template <typename T>
    _xvec4<T> operator- (const _xvec4<T>& v1, const _xvec4<T>& v2);

    template <typename T>
    _xvec4<T> operator* (const _xvec4<T>& v, const T s);

    template <typename T>
    _xvec4<T> operator* (const T s, const _xvec4<T>& v);

    template <typename T>
    _xvec4<T> operator* (const _xvec4<T>& v1, const _xvec4<T>& v2);

    template <typename T>
    _xvec4<T> operator/ (const _xvec4<T>& v, const T s);

    template <typename T>
    _xvec4<T> operator/ (const T s, const _xvec4<T>& v);

    template <typename T>
    _xvec4<T> operator/ (const _xvec4<T>& v1, const _xvec4<T>& v2);

    // Unary constant operators
    template <typename T> 
    const _xvec4<T> operator- (const _xvec4<T>& v);

    template <typename T> 
    const _xvec4<T> operator-- (const _xvec4<T>& v, int);

    template <typename T> 
    const _xvec4<T> operator++ (const _xvec4<T>& v, int);
} //namespace glm

#endif//__xvec4_h__
